openapi: 3.0.3
info:
  title: Task Tracker API
  version: 1.0.0
  description: API for the Task Tracker app
paths:
  /api/adhoc-tasks/:
    get:
      operationId: adhoc_tasks_list
      description: ViewSet for ad hoc task operations.
      tags:
      - adhoc-tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdHocTask'
          description: ''
    post:
      operationId: adhoc_tasks_create
      description: ViewSet for ad hoc task operations.
      tags:
      - adhoc-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdHocTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocTask'
          description: ''
  /api/adhoc-tasks/{id}/:
    get:
      operationId: adhoc_tasks_retrieve
      description: ViewSet for ad hoc task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ad Hoc Task.
        required: true
      tags:
      - adhoc-tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocTask'
          description: ''
    put:
      operationId: adhoc_tasks_update
      description: ViewSet for ad hoc task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ad Hoc Task.
        required: true
      tags:
      - adhoc-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdHocTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocTask'
          description: ''
    patch:
      operationId: adhoc_tasks_partial_update
      description: ViewSet for ad hoc task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ad Hoc Task.
        required: true
      tags:
      - adhoc-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdHocTask'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocTask'
          description: ''
    delete:
      operationId: adhoc_tasks_destroy
      description: ViewSet for ad hoc task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ad Hoc Task.
        required: true
      tags:
      - adhoc-tasks
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/completions/complete_task/:
    post:
      operationId: completions_complete_task_create
      description: Complete a task and record who completed it
      summary: Complete a task
      tags:
      - completions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTaskResponse'
          description: ''
  /api/completions/complete_task_by_name/:
    post:
      operationId: completions_complete_task_by_name_create
      description: Complete a task using just the task name and username. Designed
        for voice commands.
      summary: Complete a task by name
      tags:
      - completions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskByName'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTaskResponse'
          description: ''
  /api/completions/recent_completions/:
    get:
      operationId: completions_recent_completions_retrieve
      description: Get recently completed tasks with optional filtering
      summary: Get recent completions
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
        description: Username to filter completions by
      - in: query
        name: days
        schema:
          type: integer
        description: 'Number of days to look back (default: all time)'
      - in: query
        name: limit
        schema:
          type: integer
        description: 'Maximum number of completions to return (default: 10, max: 100)'
      tags:
      - completions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentCompletionsResponse'
          description: ''
  /api/leftover-types/:
    get:
      operationId: leftover_types_list
      description: ViewSet for leftover type operations.
      tags:
      - leftover-types
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeftoverType'
          description: ''
    post:
      operationId: leftover_types_create
      description: ViewSet for leftover type operations.
      tags:
      - leftover-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeftoverType'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeftoverType'
          description: ''
  /api/leftover-types/{id}/:
    get:
      operationId: leftover_types_retrieve
      description: ViewSet for leftover type operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover Type.
        required: true
      tags:
      - leftover-types
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeftoverType'
          description: ''
    put:
      operationId: leftover_types_update
      description: ViewSet for leftover type operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover Type.
        required: true
      tags:
      - leftover-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeftoverType'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeftoverType'
          description: ''
    patch:
      operationId: leftover_types_partial_update
      description: ViewSet for leftover type operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover Type.
        required: true
      tags:
      - leftover-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeftoverType'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeftoverType'
          description: ''
    delete:
      operationId: leftover_types_destroy
      description: ViewSet for leftover type operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover Type.
        required: true
      tags:
      - leftover-types
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/leftovers/:
    get:
      operationId: leftovers_list
      description: ViewSet for leftover operations.
      tags:
      - leftovers
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leftover'
          description: ''
    post:
      operationId: leftovers_create
      description: ViewSet for leftover operations.
      tags:
      - leftovers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leftover'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leftover'
          description: ''
  /api/leftovers/{id}/:
    get:
      operationId: leftovers_retrieve
      description: ViewSet for leftover operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover.
        required: true
      tags:
      - leftovers
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leftover'
          description: ''
    put:
      operationId: leftovers_update
      description: ViewSet for leftover operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover.
        required: true
      tags:
      - leftovers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leftover'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leftover'
          description: ''
    patch:
      operationId: leftovers_partial_update
      description: ViewSet for leftover operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover.
        required: true
      tags:
      - leftovers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeftover'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leftover'
          description: ''
    delete:
      operationId: leftovers_destroy
      description: ViewSet for leftover operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Leftover.
        required: true
      tags:
      - leftovers
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/leftovers/list-leftovers/:
    get:
      operationId: leftovers_list_leftovers_retrieve
      description: List all leftovers in the fridge, sorted by creation date
      summary: List leftovers
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
        description: Username to filter leftovers by
      - in: query
        name: overdue_only
        schema:
          type: boolean
        description: If true, only return overdue leftovers
      tags:
      - leftovers
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeftoversResponse'
          description: ''
  /api/recommendations/recommended-tasks/:
    get:
      operationId: recommendations_recommended_tasks_retrieve
      description: Return up to 3 tasks that are assigned to the specified user, fit
        within available time, need completion based on their frequency, and are ordered
        by priority and overdue status
      summary: Get recommended tasks
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
        description: Username to get recommendations for
        required: true
      - in: query
        name: available_minutes
        schema:
          type: integer
        description: Time limit in minutes for recommended tasks (must be positive)
        required: true
      tags:
      - recommendations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedTasksResponse'
          description: ''
  /api/recurring-tasks/:
    get:
      operationId: recurring_tasks_list
      description: ViewSet for recurring task operations.
      tags:
      - recurring-tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecurringTask'
          description: ''
    post:
      operationId: recurring_tasks_create
      description: ViewSet for recurring task operations.
      tags:
      - recurring-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringTask'
          description: ''
  /api/recurring-tasks/{id}/:
    get:
      operationId: recurring_tasks_retrieve
      description: ViewSet for recurring task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Recurring Task.
        required: true
      tags:
      - recurring-tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringTask'
          description: ''
    put:
      operationId: recurring_tasks_update
      description: ViewSet for recurring task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Recurring Task.
        required: true
      tags:
      - recurring-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringTask'
          description: ''
    patch:
      operationId: recurring_tasks_partial_update
      description: ViewSet for recurring task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Recurring Task.
        required: true
      tags:
      - recurring-tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecurringTask'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringTask'
          description: ''
    delete:
      operationId: recurring_tasks_destroy
      description: ViewSet for recurring task operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Recurring Task.
        required: true
      tags:
      - recurring-tasks
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/all-tasks/:
    get:
      operationId: tasks_all_tasks_retrieve
      description: Get all tasks with optional filtering across all task types
      summary: Get all tasks
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
        description: User ID to filter tasks by
      - in: query
        name: frequency
        schema:
          type: string
        description: Frequency value to filter tasks by (e.g., "1" for daily)
      - in: query
        name: priority
        schema:
          type: string
        description: Priority value to filter tasks by
      - in: query
        name: task_type
        schema:
          type: string
        description: Type of task to filter
      - in: query
        name: thin
        schema:
          type: boolean
        description: If true, return minimal task data
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTasksResponse'
          description: ''
  /api/tasks/available-tasks/:
    get:
      operationId: tasks_available_tasks_retrieve
      description: Get tasks that are available for completion based on user and time
        constraints
      summary: Get available tasks
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
        description: Username to filter tasks
      - in: query
        name: available_minutes
        schema:
          type: integer
        description: Available time in minutes
      - in: query
        name: upcoming_days
        schema:
          type: integer
        description: Number of upcoming days to consider
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableTasksResponse'
          description: ''
  /api/tasks/create-adhoc-task/:
    post:
      operationId: tasks_create_adhoc_task_create
      description: Create a new ad hoc (one-time) task
      summary: Create ad hoc task
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdHocTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAdHocTaskResponse'
          description: ''
  /api/tasks/create-leftover/:
    post:
      operationId: tasks_create_leftover_create
      description: Create a new leftover item
      summary: Create leftover
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeftover'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLeftoverResponse'
          description: ''
  /api/tasks/task-by-name/:
    get:
      operationId: tasks_task_by_name_retrieve
      description: Look up a task by name and user
      summary: Get task by name
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
        description: Username of assigned user
      - in: query
        name: name
        schema:
          type: string
        description: Name of the task to find
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskByNameResponse'
          description: ''
  /api/tasks/task-query/:
    get:
      operationId: tasks_task_query_retrieve
      description: Query for a task by name across all task types with intelligent
        responses
      summary: Query for task
      parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Name of the task to find
        required: true
      - in: query
        name: question_type
        schema:
          type: string
          enum:
          - general
          - how_old
          - notes
          - safe_to_eat
        description: 'Type of question: safe_to_eat, how_old, notes, general'
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueryResponse'
          description: ''
  /api/tasks/update-next-due/:
    post:
      operationId: tasks_update_next_due_create
      description: Update a task's next due date
      summary: Update task next due date
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNextDue'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNextDueResponse'
          description: ''
components:
  schemas:
    AdHocTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        date_completed:
          type: string
          format: date-time
          nullable: true
        depends_on:
          type: integer
          nullable: true
      required:
      - assigned_to
      - completed_by
      - created_by
      - id
      - name
      - tags
      - updated_at
    AllTasksResponse:
      type: object
      description: Response for all_tasks endpoint
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDataResponse'
        count:
          type: integer
      required:
      - count
      - tasks
    AvailableTasksResponse:
      type: object
      description: Response for available_tasks endpoint
      properties:
        available_tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDataResponse'
        count:
          type: integer
        spoken_response:
          type: string
        total_duration:
          type: integer
      required:
      - available_tasks
      - count
      - spoken_response
      - total_duration
    CompleteTask:
      type: object
      description: Request serializer for complete_task endpoint
      properties:
        task_id:
          type: integer
        task_type:
          type: string
        assigned_to:
          type: string
        notes:
          type: string
        completed_at:
          type: string
      required:
      - task_id
      - task_type
    CompleteTaskByName:
      type: object
      description: Request serializer for complete_task_by_name endpoint
      properties:
        name:
          type: string
        assigned_to:
          type: string
        notes:
          type: string
      required:
      - assigned_to
      - name
    CompleteTaskResponse:
      type: object
      description: Response for complete_task and complete_task_by_name endpoints
      properties:
        completion:
          $ref: '#/components/schemas/CompletionData'
        spoken_response:
          type: string
      required:
      - completion
      - spoken_response
    CompletionData:
      type: object
      description: Completion data structure returned by service layer
      properties:
        id:
          type: integer
          nullable: true
        task_id:
          type: integer
        name:
          type: string
        task_type:
          type: string
        completed_at:
          type: string
        completed_by:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        task_frequency:
          type: string
          nullable: true
        task_frequency_days:
          type: integer
          nullable: true
        task_priority:
          type: string
        task_priority_value:
          type: integer
        task_duration_minutes:
          type: integer
      required:
      - completed_at
      - completed_by
      - id
      - name
      - notes
      - task_id
    CreateAdHocTask:
      type: object
      properties:
        name:
          type: string
        assigned_to:
          type: string
        duration_minutes:
          type: integer
          minimum: 1
          nullable: true
        priority:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PriorityEnum'
          - $ref: '#/components/schemas/NullEnum'
        notes:
          type: string
      required:
      - assigned_to
      - name
    CreateAdHocTaskResponse:
      type: object
      description: Response for create_adhoc_task endpoint
      properties:
        status:
          type: string
        spoken_response:
          type: string
        task:
          $ref: '#/components/schemas/TaskDataResponse'
      required:
      - spoken_response
      - status
      - task
    CreateLeftover:
      type: object
      properties:
        name:
          type: string
        assigned_to:
          type: string
        shelf_life_days:
          type: string
          nullable: true
        days_ago:
          type: string
          nullable: true
      required:
      - name
    CreateLeftoverResponse:
      type: object
      description: Response for create_leftover endpoint
      properties:
        status:
          type: string
        spoken_response:
          type: string
        leftover:
          $ref: '#/components/schemas/TaskDataResponse'
        leftover_type:
          $ref: '#/components/schemas/LeftoverTypeData'
      required:
      - leftover
      - leftover_type
      - spoken_response
      - status
    FrequencyDaysEnum:
      enum:
      - 1
      - 3
      - 7
      - 14
      - 30
      - 90
      - 365
      type: integer
      description: |-
        * `1` - Daily
        * `3` - Twice Weekly
        * `7` - Weekly
        * `14` - Biweekly
        * `30` - Monthly
        * `90` - Quarterly
        * `365` - Yearly
    Leftover:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        leftover_type:
          allOf:
          - $ref: '#/components/schemas/LeftoverType'
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        date_completed:
          type: string
          format: date-time
          nullable: true
        shelf_life_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        depends_on:
          type: integer
          nullable: true
      required:
      - assigned_to
      - completed_by
      - created_by
      - id
      - leftover_type
      - name
      - tags
      - updated_at
    LeftoverDataResponse:
      type: object
      description: Extended leftover data structure for list_leftovers
      properties:
        id:
          type: integer
        name:
          type: string
        task_type:
          type: string
        assigned_to:
          type: string
          nullable: true
        leftover_type:
          type: string
        shelf_life_days:
          type: integer
        days_old:
          type: integer
        is_safe_to_eat:
          type: boolean
        days_overdue:
          type: integer
          nullable: true
        is_overdue:
          type: boolean
        created_at:
          type: string
          nullable: true
        is_completed:
          type: boolean
        date_completed:
          type: string
          nullable: true
        is_active:
          type: boolean
        due_date:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        duration_minutes:
          type: integer
          nullable: true
        priority:
          type: string
          nullable: true
        priority_value:
          type: integer
          nullable: true
      required:
      - assigned_to
      - created_at
      - date_completed
      - days_old
      - days_overdue
      - due_date
      - duration_minutes
      - id
      - is_active
      - is_completed
      - is_overdue
      - is_safe_to_eat
      - leftover_type
      - name
      - notes
      - priority
      - priority_value
      - shelf_life_days
      - task_type
    LeftoverType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        shelf_life_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_by
      - id
      - name
      - tags
      - updated_at
    LeftoverTypeData:
      type: object
      description: Leftover type data structure
      properties:
        id:
          type: integer
        name:
          type: string
        shelf_life_days:
          type: integer
      required:
      - id
      - name
      - shelf_life_days
    ListLeftoversResponse:
      type: object
      description: Response for list_leftovers endpoint
      properties:
        leftovers:
          type: array
          items:
            $ref: '#/components/schemas/LeftoverDataResponse'
        count:
          type: integer
        overdue_count:
          type: integer
        safe_count:
          type: integer
        spoken_response:
          type: string
      required:
      - count
      - leftovers
      - overdue_count
      - safe_count
      - spoken_response
    NullEnum:
      enum:
      - null
    PatchedAdHocTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        date_completed:
          type: string
          format: date-time
          nullable: true
        depends_on:
          type: integer
          nullable: true
    PatchedLeftover:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        leftover_type:
          allOf:
          - $ref: '#/components/schemas/LeftoverType'
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        date_completed:
          type: string
          format: date-time
          nullable: true
        shelf_life_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        depends_on:
          type: integer
          nullable: true
    PatchedLeftoverType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        shelf_life_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedRecurringTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        frequency:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        frequency_days:
          allOf:
          - $ref: '#/components/schemas/FrequencyDaysEnum'
          minimum: 0
          maximum: 9223372036854775807
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_completed:
          type: string
          format: date-time
          nullable: true
        depends_on:
          type: integer
          nullable: true
    PriorityEnum:
      enum:
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `1` - High
        * `2` - Medium
        * `3` - Low
    RecentCompletionsResponse:
      type: object
      description: Response for get_recent_completions endpoint
      properties:
        count:
          type: integer
        completions:
          type: array
          items:
            $ref: '#/components/schemas/CompletionData'
        total_duration:
          type: integer
      required:
      - completions
      - count
      - total_duration
    RecommendedTasksResponse:
      type: object
      description: Response for get_recommended_tasks endpoint
      properties:
        recommended_tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDataResponse'
        count:
          type: integer
        total_duration:
          type: integer
        remaining_minutes:
          type: integer
        spoken_response:
          type: string
      required:
      - count
      - recommended_tasks
      - remaining_minutes
      - spoken_response
      - total_duration
    RecurringTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        completed_by:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
        frequency:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        is_active:
          type: boolean
        next_due:
          type: string
          format: date-time
          nullable: true
          description: Next scheduled completion date. Optional override for due date.
        frequency_days:
          allOf:
          - $ref: '#/components/schemas/FrequencyDaysEnum'
          minimum: 0
          maximum: 9223372036854775807
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_completed:
          type: string
          format: date-time
          nullable: true
        depends_on:
          type: integer
          nullable: true
      required:
      - assigned_to
      - completed_by
      - created_by
      - duration_minutes
      - frequency
      - frequency_days
      - id
      - name
      - tags
      - updated_at
    TaskByNameResponse:
      type: object
      description: Response for get_task_by_name endpoint
      properties:
        task:
          $ref: '#/components/schemas/TaskDataResponse'
      required:
      - task
    TaskDataResponse:
      type: object
      description: Task data structure returned by service layer
      properties:
        id:
          type: integer
        name:
          type: string
        task_type:
          type: string
        assigned_to:
          type: string
          nullable: true
        frequency_days:
          type: integer
          nullable: true
        frequency:
          type: string
          nullable: true
        due_date:
          type: string
          nullable: true
        duration_minutes:
          type: integer
          nullable: true
        priority:
          type: string
          nullable: true
        priority_value:
          type: integer
          nullable: true
        last_completed:
          type: string
          nullable: true
        is_overdue:
          type: boolean
        days_overdue:
          type: integer
          nullable: true
        notes:
          type: string
          nullable: true
        last_completion_notes:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean
        alternate_names:
          type: array
          items:
            type: string
        created_at:
          type: string
          nullable: true
        date_completed:
          type: string
          nullable: true
        is_completed:
          type: boolean
        leftover_type:
          type: string
          nullable: true
        shelf_life_days:
          type: integer
          nullable: true
        days_old:
          type: integer
          nullable: true
        is_safe_to_eat:
          type: boolean
      required:
      - assigned_to
      - id
      - name
    TaskQueryResponse:
      type: object
      description: Response for task_query endpoint
      properties:
        task:
          $ref: '#/components/schemas/TaskDataResponse'
        spoken_response:
          type: string
      required:
      - spoken_response
      - task
    UpdateNextDue:
      type: object
      properties:
        task_id:
          type: integer
        assigned_to:
          type: string
        next_due:
          type: string
      required:
      - assigned_to
      - next_due
      - task_id
    UpdateNextDueResponse:
      type: object
      description: Response for update_next_due endpoint
      properties:
        status:
          type: string
        spoken_response:
          type: string
      required:
      - spoken_response
      - status
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
