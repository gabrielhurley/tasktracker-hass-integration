language: "en"
intents:
  CompleteTask:
    data:
      - sentences:
          - "{task_completed_by} completed [the task] {task_name}"
        slots:
          task_completed_by:
            required: true
          task_name:
            required: true
      - sentences:
          - "I completed [the task] {task_name}"
          - "I'm getting rid of [the] leftover {task_name} [in|from] [the (fridge|refridgerator)]"
          - "I'm throwing out [the] leftover {task_name} [in|from] [the (fridge|refridgerator)]"
          - "I'm tossing [out] [the] leftover {task_name} [in|from] [the (fridge|refridgerator)]"
          - "I'm eating [the] [leftover] {task_name} [leftover|leftovers] [in|from] [the (fridge|refridgerator)] "
          - "I ate [the] [leftover] {task_name} [leftover|leftovers] [in|from] [the (fridge|refridgerator)]"
          - "(remove|delete) [the] leftover {task_name}"
          - "I threw out the leftover {task_name} [in|from] [the (fridge|refridgerator)]"
        slots:
          task_name:
            required: true

  GetRecommendedTasksForPersonAndTime:
    data:
      - sentences:
          - "What [tasks] (can|should) {person} do in {time} minutes"
          - "{person} has {time} minutes what [tasks] can (they|he|she) do"
          - "What should {person} (work|focus) on for {time} minutes"
        slots:
          person:
            required: true
          time:
            required: true

  GetRecommendedTasksForPerson:
    data:
      - sentences:
          - "What [tasks] (can|should) {person} do [today]"
        slots:
          person:
            required: true

  GetTaskDetails:
    data:
      - sentences:
          - "What does [the task] {task_name} entail"
          - "Tell me more about [the task] {task_name}"
          - "What are the details of [the task] {task_name}"
        slots:
          task_name:
            required: true

  AddLeftover:
    data:
      - sentences:
          - "Add leftover {leftover_name}"
          - "I'm adding [leftover] {leftover_name} [leftover|leftovers] to the (fridge|refridgerator)"
          - "I'm putting [leftover] {leftover_name} [leftover|leftovers] in the (fridge|refridgerator)"
          - "I (added|put) leftover {leftover_name} [leftover|leftovers] (to|in) the (fridge|refridgerator)"
          - "I (added|put) {leftover_name} [leftover|leftovers] (to|in) the (fridge|refridgerator)"
          - "There (is|are) leftover[s] [of] {leftover_name}"
          - "There (is|are) {leftover_name} leftover[s]"
        slots:
          leftover_name:
            required: true
      - sentences:
          - "I (added|put) leftover {leftover_name} (to|in) the (fridge|refridgerator) {days_ago} days ago"
          - "I (added|put) {leftover_name} leftovers (to|in) the (fridge|refridgerator) {days_ago} days ago"
        slots:
          task_name:
            required: true
          days_ago:
            required: true

  AddAdHocTask:
    data:
      - sentences:
          - "I need to {task_name}"
          - "Remind me to {task_name}"
        slots:
          task_name:
            required: true
      - sentences:
          - "(add|create) [a|the] task [called|named] {task_name} with [a|the] duration [of] {task_duration} minutes"
        slots:
          task_name:
            required: true
          task_duration:
            required: true
      - sentences:
          - "(add|create) [a|the] task [called|named] {task_name} assigned to {task_assigned_to}"
          - "Remind {task_assigned_to} to {task_name}"
        slots:
          task_name:
            required: true
          task_assigned_to:
            required: true
      - sentences:
          - "(add|create) [a|the] task [called|named] {task_name} with priority {task_priority}"
        slots:
          task_name:
            required: true
          task_priority:
            required: true
      - sentences:
          - "(add|create) [a|the] task [called|named] {task_name} with priority {task_priority} assigned to {task_assigned_to}"
          - "(add|create) [a|the] task [called|named] {task_name} assigned to {task_assigned_to} with priority {task_priority}"
        slots:
          task_name:
            required: true
          task_assigned_to:
            required: true
          task_priority:
            required: true

  QueryTaskStatus:
    data:
      - sentences:
          - "is [the] [leftover] {task_name} [still] good"
          - "can (I|we) [still] eat [the] [leftover] {task_name} [in the (fridge|refridgerator)]"
          - "is [the] [leftover] {task_name} [still] safe [to eat]"
        slots:
          task_name:
            required: true
          question_type:
            value: "safe_to_eat"
      - sentences:
          - "how old is [the] [leftover] {task_name}"
          - "how long has [the] [leftover] {task_name} been in the (fridge|refridgerator)"
          - "when was [the] [leftover] {task_name} added"
          - "when did (I|we) put [the] [leftover] {task_name} in the (fridge|refridgerator)"
          - "when did we order [the] [leftover] {task_name}"
        slots:
          task_name:
            required: true
          question_type:
            value: "how_old"
      - sentences:
          - "what are the notes for [the task] {task_name}"
          - "tell me about [the] [task] {task_name}"
          - "what notes are (on|for) [the task] {task_name}"
        slots:
          task_name:
            required: true
          question_type:
            value: "notes"
      - sentences:
          - "status of {task_name}"
          - "information about {task_name}"
          - "details about {task_name}"
        slots:
          task_name:
            required: true
          question_type:
            value: "general"

lists:
  task_name:
    wildcard: true
  task_completed_by:
    wildcard: true
  person:
    wildcard: true
  time:
    wildcard: true
  leftover_name:
    wildcard: true
  task_assigned_to:
    wildcard: true
  task_duration:
    wildcard: true
  days_ago:
    range:
      from: 1
      to: 30
  task_priority:
    values:
      - in: (high | maximum | highest)
        out: 1
      - in: (medium | mid)
        out: 2
      - in: (low | minimum | lowest)
        out: 3
